apiVersion: batch/v1
kind: Job
metadata:
  name: db-setup
  namespace: svc-loadsure
spec:
  backoffLimit: 3
  ttlSecondsAfterFinished: 86400  # Auto-delete after 1 day
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: db-migrations
        image: registry.digitalocean.com/svc-container-registry/api-service:latest
        imagePullPolicy: Always
        command: ["sh", "-c", "cd /usr/src/app && echo 'const path = require(\"path\"); module.exports = { \"config\": path.resolve(\"database/config.cjs\"), \"models-path\": path.resolve(\"database/models\"), \"seeders-path\": path.resolve(\"database/seeders\"), \"migrations-path\": path.resolve(\"database/migrations\") };' > /usr/src/app/.sequelizerc && echo 'Debug: DB_USERNAME='$DB_USERNAME', DB_HOST='$DB_HOST', NODE_ENV='$NODE_ENV && npx sequelize-cli db:migrate --debug"]
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: NODE_ENV
        - name: DB_DIALECT
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: DB_DIALECT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: DB_NAME
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: svc-loadsure-secrets  # Ensure this secret exists from secrets-production.yaml
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: svc-loadsure-secrets  # Ensure this secret exists from secrets-production.yaml
              key: DB_PASSWORD
        - name: DB_SSL
          value: "false"  # Disable SSL as server doesn't support it
        - name: NODE_ENV
          value: "production"  # Explicitly set to production
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.28
        command: ['sh', '-c', 'until nc -z postgres 5432; do echo waiting for postgres; sleep 2; done;']