apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
  namespace: svc-loadsure
  labels:
    app: api-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: api-service
    spec:
      imagePullSecrets:
      - name: do-registry
      containers:
      - name: api-service
        image: registry.digitalocean.com/svc-container-registry/api-service:latest
        imagePullPolicy: Always
        command: ["node", "src/index.js"]
        ports:
        - containerPort: 3000  # Changed to match Docker setup (3000 internally)
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: NODE_ENV
        - name: DB_DIALECT
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: DB_DIALECT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: DB_NAME
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: svc-loadsure-secrets
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: svc-loadsure-secrets
              key: DB_PASSWORD
        - name: DB_SSL
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: DB_SSL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: REDIS_URL
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: svc-loadsure-secrets
              key: RABBITMQ_USER
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: svc-loadsure-secrets
              key: RABBITMQ_PASSWORD
        - name: RABBITMQ_URL
          value: "amqp://loadsure:loadsurepass@rabbitmq:5672"
        - name: LOADSURE_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: LOADSURE_BASE_URL
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: API_PORT
        - name: LOADSURE_API_KEY
          valueFrom:
            secretKeyRef:
              name: svc-loadsure-secrets
              key: LOADSURE_API_KEY
        - name: RATE_LIMIT_WINDOW_MS
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: RATE_LIMIT_WINDOW_MS
        - name: RATE_LIMIT_MAX_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: svc-loadsure-config
              key: RATE_LIMIT_MAX_REQUESTS
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "300m"
        readinessProbe:
          httpGet:
            path: /health
            port: 3000  # Using correct container port
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 3000  # Using correct container port
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: svc-loadsure
  labels:
    app: api-service
spec:
  ports:
  - port: 3001
    targetPort: 3000  # Updated to match container port
    protocol: TCP
    name: http
  selector:
    app: api-service
  type: ClusterIP