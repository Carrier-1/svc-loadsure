name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd backend
        npm ci
    
    - name: Run linter
      run: |
        cd backend
        npm run lint
    
    - name: Run unit tests
      run: |
        cd backend
        npm test
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        DB_NAME: test_db
        REDIS_URL: redis://localhost:6379
        LOADSURE_API_KEY: test-api-key
        RABBITMQ_URL: amqp://localhost:5672

    - name: Validate App Platform specs
      run: |
        # Basic YAML validation
        python3 -c "
        import yaml
        import sys
        
        files = ['.do/app.staging.yaml', '.do/app.production.yaml']
        for file in files:
            try:
                with open(file, 'r') as f:
                    yaml.safe_load(f)
                print(f'✅ {file} is valid YAML')
            except Exception as e:
                print(f'❌ {file} is invalid: {e}')
                sys.exit(1)
        "

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        cd backend
        npm audit --audit-level=high
    
    - name: Scan for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified